/////////////////
// Semantic.gs // 
/////////////////

// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
.clearfix() {
	*zoom:1;
	
	&:before,
	&:after {
	    content:"";
	    display:table;
	}
	&:after {
	    clear:both;
	}
}

body {
	width: 100%;
	.clearfix;
}

///////////////
// MAIN GRID //
///////////////

@column-width: 20;
@gutter-width: 0;
@margin: 10;
@row-height: 15;
@columns: 68;
@rows: 42; 
@gridsystem-width: ((@column-width*@columns) + (@gutter-width*@columns)) * 1px;
@gridsystem-height: @row-height * @rows * 1px;
@total-width: @gridsystem-width + 5px;
@total-height: @gridsystem-height + 5px;

//Columns
.total-column(@columns:@columns) {
	display: block;
	width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width);
	margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1);
	.clearfix;
}

.column-p(@x){
    display: inline;
    float: left;
    //width: unit(@x,%);
    width: @x * 1%;
}

.column-p(@x, @columns:@columns){
    display: inline;
    float: left;
    width: ((100%*@x)/@columns);
}

.width-fl(@x){
    display: inline;
    float: left;
    width: @x;
}

.width-fr(@x){
    display: inline;
    float: right;
    width: @x;
}
.column(@x,@columns:@columns) {
	display: inline;
	float: left;
	width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
}

.sections(@x,@columns:@columns) {
    box-sizing: border-box;
	display: inline;
	float: left;
    width: ((@total-width - @margin) / @x) - @margin;
    margin-left: @margin * 1px;
}

.push(@offset:1) {
	margin-left: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}
.pull(@offset:1) {
	margin-right: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}

//Rows
.total-row(@rows:@rows) {
	display: block;
	height: @total-height;
	.clearfix;
}

.row(@y,@rows:@rows) {
	display: inline;
	float: left;
	height: @total-height*((@row-height*@y) / @gridsystem-height);
}

.hsections(@y,@rows:@rows) {
    box-sizing: border-box;
	display: inline;
	float: left;
    height: ((@total-height - @margin) / @y) - @margin;
    margin-top: @margin * 1px;
}

.vpush(@offset:1) {
	margin-top: @total-height*((@row-height*@offset) / @gridsystem-height);
}

.vpull(@offset:1) {
	margin-bottom: @total-height*((@row-height*@offset) / @gridsystem-height);
}


